const fs = require('fs');
const path = require('path');

// Resolve SITE_URL in priority order: ENV -> package.json "homepage" -> default
function getSiteUrl() {
  if (process.env.SITE_URL) return process.env.SITE_URL.replace(/\/+$/, '');
  try {
    const pkg = require(path.resolve(__dirname, '../package.json'));
    if (pkg.homepage) return pkg.homepage.replace(/\/+$/, '');
  } catch (_) { }
  return 'https://www.example.com';
}

const SITE_URL = getSiteUrl();

// Define your public routes (mirror react-router routes in src/App.jsx)
const routes = [
  { path: '/', changefreq: 'daily', priority: 1.0 },
  { path: '/contact', changefreq: 'monthly', priority: 0.8 },
  { path: '/work', changefreq: 'weekly', priority: 0.9 },
  { path: '/live', changefreq: 'weekly', priority: 0.7 },
  { path: '/apparel', changefreq: 'weekly', priority: 0.7 },
  { path: '/bw', changefreq: 'weekly', priority: 0.7 },
  { path: '/resume', changefreq: 'monthly', priority: 0.8 },
  { path: '/people', changefreq: 'weekly', priority: 0.7 },
  { path: '/places', changefreq: 'weekly', priority: 0.7 },
  { path: '/cars', changefreq: 'weekly', priority: 0.7 },
  { path: '/events', changefreq: 'weekly', priority: 0.7 },
];

function xmlEscape(str) {
  return String(str)
    .replace(/&/g, '&amp;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&apos;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;');
}

function buildSitemapXml(urlset) {
  const urlsXml = urlset
    .map((u) => {
      const loc = `${SITE_URL}${u.path}`.replace(/\/+$/, '') || SITE_URL;
      return `
  <url>
    <loc>${xmlEscape(loc || SITE_URL)}</loc>
    <lastmod>${new Date().toISOString()}</lastmod>
    <changefreq>${u.changefreq || 'weekly'}</changefreq>
    <priority>${typeof u.priority === 'number' ? u.priority.toFixed(1) : '0.5'}</priority>
  </url>`;
    })
    .join('');

  return `<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by scripts/generate-sitemap.js -->
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${urlsXml}
</urlset>
`;
}

function main() {
  const publicDir = path.resolve(__dirname, '../public');
  if (!fs.existsSync(publicDir)) {
    fs.mkdirSync(publicDir, { recursive: true });
  }
  const xml = buildSitemapXml(routes);
  const outPath = path.join(publicDir, 'sitemap.xml');
  fs.writeFileSync(outPath, xml, 'utf8');
  console.log(`Sitemap written to: ${outPath}`);
  console.log(`Base URL: ${SITE_URL}`);
}

main();